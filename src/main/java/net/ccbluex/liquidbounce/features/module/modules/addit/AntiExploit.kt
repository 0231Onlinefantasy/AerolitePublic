package net.ccbluex.liquidbounce.features.module.modules.addit

import net.ccbluex.liquidbounce.event.*
import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.utils.ClientUtils
import net.ccbluex.liquidbounce.value.*
import net.minecraft.network.play.server.*

@ModuleInfo(name = "AntiExploit", category = ModuleCategory.ADDIT, array = false, defaultOn = true)
class AntiExploit : Module() {

    init {
        state = true
    }

    val notifyValue = BoolValue("Notify", false)
    val guardianValue = BoolValue("LessGuardian", true)
    private val maxArrowSpawn = IntegerValue("MaxArrowPerSecond", 100, 1, 1000)

    private var tick = 0
    private var arrowMax = 0
    private var guardianEffect = false


    @EventTarget
    fun onPacket(event: PacketEvent) {
        val packet = event.packet

        if (packet is S2BPacketChangeGameState) {
            if (packet.getGameState() == 5 && !mc.isDemo()) {
                event.cancelEvent()
            }
            if (packet.getGameState() == 10 && guardianValue.get()) {
                if (!guardianEffect)
                    guardianEffect = true
                else {
                    event.cancelEvent()
                }
            }
        }

        if (packet is S0EPacketSpawnObject && packet.getType() == 60) {
            arrowMax++
            if (arrowMax > maxArrowSpawn.get()) {
                event.cancelEvent()
            }
        }
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        tick++
        if (tick >= 20) {
            tick = 0
            arrowMax = 0
            guardianEffect = false
        }
    }

}