/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/UnlegitMC/FDPClient/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit

import net.ccbluex.liquidbounce.features.module.Module
import net.ccbluex.liquidbounce.features.module.ModuleCategory
import net.ccbluex.liquidbounce.features.module.ModuleInfo
import net.ccbluex.liquidbounce.value.IntegerValue
import net.ccbluex.liquidbounce.value.FloatValue
import net.ccbluex.liquidbounce.value.ListValue
import net.ccbluex.liquidbounce.value.BoolValue
import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition
import net.ccbluex.liquidbounce.utils.PacketUtils

@ModuleInfo(name = "Damage", category = ModuleCategory.EXPLOIT, canEnable = false)
class Damage : Module() {

    private val modeValue = ListValue("Mode", arrayOf("NCP", "AAC","Verus"), "NCP")
    private val damageMode = ListValue("VerusMode", arrayOf("Damage1","Damage2","Damage3","CustomDamage"), "Damage1").displayable {modeValue.equals("Verus")}
    private val packet1 = FloatValue("CustomPacket1Clip", 4f,0f,5f).displayable {modeValue.equals("Verus")}
    private val packet2 = FloatValue("CustomPacket2Clip", -0.2f,-1f,5f).displayable {modeValue.equals("Verus")}
    private val packet3 = FloatValue("CustomPacket3Clip", 0.5f,0f,5f).displayable {modeValue.equals("Verus")}
    private val damageValue = IntegerValue("Damage", 1, 1, 20)
    private val onlyGround = BoolValue("OnlyGround",true)

    override fun onEnable() {
        if (onlyGround.get() && !mc.thePlayer.onGround) {
            return
        }

        when (modeValue.get().toLowerCase()) {
            "ncp" -> {
                val x = mc.thePlayer.posX
                val y = mc.thePlayer.posY
                val z = mc.thePlayer.posZ

                repeat((55 + damageValue.get() * 10.204).toInt()) {
                    mc.netHandler.addToSendQueue(C04PacketPlayerPosition(x, y + 0.049, z, false))
                    mc.netHandler.addToSendQueue(C04PacketPlayerPosition(x, y, z, false))
                }
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(x, y, z, true))
            }
            "aac" -> mc.thePlayer.motionY = 4 + damageValue.get().toDouble()
            "verus" -> {
                when (damageMode.get().lowercase()) {
                    "damage1" -> {
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 3.05, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 0.41999998688697815, mc.thePlayer.posZ, true))
                    }
                    "damage2" -> {
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 3.35, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true))
                    }
                    "damage3" -> {
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + 4, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true))
                    }
                    "customdamage" -> {
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + packet1.get().toDouble(), mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + packet2.get().toDouble(), mc.thePlayer.posZ, false))
                        PacketUtils.sendPacketNoEvent(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY + packet3.get().toDouble(), mc.thePlayer.posZ, true))
                    }
                }
            }
        }
    }

}